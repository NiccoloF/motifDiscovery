% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/motif_search_plot_norm.R
\name{motifs_search_plot_norm}
\alias{motifs_search_plot_norm}
\title{Plot Normalized Motifs Search Results}
\usage{
motifs_search_plot_norm(
  motifs_search_results,
  ylab = "",
  freq_threshold = 5,
  top_n = "all",
  plot_curves = TRUE,
  transformed = FALSE
)
}
\arguments{
\item{motifs_search_results}{A list containing the output of the `motifs_search` function,
including detected motifs and associated data.}

\item{ylab}{A vector of length `d` specifying the titles for the y-axis for each dimension.}

\item{freq_threshold}{An integer defining the minimum frequency for motifs to be plotted. 
Only motifs with a frequency equal to or greater than this threshold will be displayed.}

\item{top_n}{Specifies the number of top motifs to plot. If set to "all", all detected motifs 
will be plotted. If an integer is provided, the top `top_n` motifs will be displayed.}

\item{plot_curves}{A logical value indicating whether to plot all curves with colored motifs. 
Defaults to TRUE.}

\item{transformed}{A logical value indicating if the y-values should be normalized to the range [0,1]. 
Defaults to FALSE.}
}
\value{
A plot object displaying the motifs and curves.
}
\description{
This function visualizes the results obtained from the motif search analysis performed
using the `motifs_search` function. It generates plots that showcase detected motifs 
along with their associated curves, providing an intuitive understanding of the 
relationships between the motifs and the underlying data. The user can customize various
parameters to tailor the visualization to their specific needs, including filtering motifs 
based on frequency and choosing whether to normalize the y-values.
}
\examples{
\dontrun{
# Assuming `results` is the output from `motifs_search`
motifs_search_plot_norm(results, ylab = c("Dimension 1", "Dimension 2"), 
                         freq_threshold = 5, top_n = 10, 
                         plot_curves = TRUE, transformed = FALSE)
}

}
