% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/probKMA_wrap.R
\name{probKMA_wrap}
\alias{probKMA_wrap}
\title{probKMA_wrap}
\usage{
probKMA_wrap(
  Y0 = NULL,
  Y1 = NULL,
  P0 = matrix(),
  S0 = matrix(),
  standardize = FALSE,
  c_max = Inf,
  iter_max = 1000,
  iter4elong = 10,
  trials_elong = 10,
  return_options = TRUE,
  alpha = 0,
  max_gap = 0.2,
  quantile = 0.25,
  stopCriterion = "max",
  tol = 1e-08,
  tol4elong = 0.001,
  max_elong = 0.5,
  deltaJK_elong = 0.05,
  iter4clean = 50,
  tol4clean = 1e-04,
  m = 2,
  w = 1,
  seed = 1,
  K = 2,
  c = 40,
  quantile4clean = 1/K,
  exe_print = FALSE,
  set_seed = FALSE,
  n_threads = 7,
  diss = "d0_2"
)
}
\arguments{
\item{Y0}{list of N vectors, for univariate curves y_i(x), or list of N matrices with d columns,
for d-dimensional curves y_i(x), with the evaluation of curves (all curves should be evaluated on
a uniform grid). When y_j(x)=NA in the dimension j, then y_j(x)=NA in ALL dimensions}

\item{Y1}{list of N vectors, for univariate derivative curves y'_i(x), or list of N matrices with
d columns, for d-dimensional derivatibe curves y'_i(x), with the evaluation of the curves derivatives
(all curves should be evaluated on a uniform grid). When y'_j(x)=NA in the dimension j, then y'_j(x)=NA
in ALL dimensions. Must be provided when diss='d1_L2' or diss='d0_d1_L2'.}

\item{P0}{initial membership matrix, with N row and K column (if NULL, a random P0 is choosen).}

\item{S0}{initial shift warping matrix, with N row and K column (if NULL, a random S0 is choosen).}

\item{standardize}{if TRUE, each dimension is standardized (Z score on all the regions together).}

\item{c_max}{maximum motif lengths. Can be an integer (or a vector of K integers).}

\item{iter_max}{the maximum number of iterations allowed.}

\item{iter4elong}{motifs elongation is performed every iter4elong iterations (if iter4elong>iter.max,
no elongation is done).}

\item{trials_elong}{number of (equispaced) elongation trials at each side of the motif in a single
iteration.}

\item{return_options}{if TRUE, the options K,c,diss,w,m are returned by the function.}

\item{alpha}{when diss='d0_d1_L2', weight coefficient between d0_L2 and d1_L2 (alpha=0 means d0_L2,
alpha=1 means d1_L2).}

\item{max_gap}{maximum gap allowed in each alignment (percentage of motif length).}

\item{quantile}{probability in (0,1) to be used if stop.criterion='quantile'.}

\item{tol}{method tolerance (method stops if the stop criterion <tol).}

\item{tol4elong}{tolerance on the Bhattacharyya distance (with the choice made in stop.criterion) for
performing motifs elongation.}

\item{max_elong}{maximum elongation allowed in a single iteration, as percentage of the motif length.}

\item{iter4clean}{motif cleaning is performed every iter4clean iterations (if iter4clean>iter_max,
no cleaning is done).}

\item{tol4clean}{tolerance on the Bhattacharyya distance (with the choice made in stop_criterion) for
performing motif cleaning.}

\item{m}{m>1 weighting exponent in least-squares functional.}

\item{w}{vector of weights for the dissimilarity index in the different dimensions (w>0).}

\item{K}{number of motifs.}

\item{c}{minimum motif lengths. Can be an integer (or a vector of K integers).}

\item{quantile4clean}{dissimilarity quantile to be used in motif cleaning.}

\item{diss}{dissimilarity. Possible choices are 'd0_L2', 'd1_L2', 'd0_d1_L2'.}

\item{stop_criterion}{criterion to stop iterate, based on the Bhattacharyya distance
between memberships in subsequent iterations. Possible choices are: 'max' for the
maximum of distances in the different motifs; 'mean' for the average of distances in
the different motifs; 'quantile' for the quantile of distances in the different motifs
(in this case, quantile must be provided).}

\item{deltaJk_elong}{maximum relative objective function increasing allowed in each motif elongation
(for gaps and each side).}

\item{return_init}{if TRUE, P0 and S0 are returned by the function.}

\item{worker_number}{number of CPU cores to be used for parallelization (default number of CPU cores -1).
If worker_number=1, the function is run sequentially.}
}
\value{
A list containing some initialization and input options of the function: P0, S0 (if return_init = TRUE), Y0, Y1, standardize, K, c, c_max, diss, alpha, w, m, iter4elong, tol4elong, max_elong, trials_elong, deltaJk_elong, max_gap, iter4clean and tol4clean (if return_options = TRUE);

\item{P}{ membership probability matrix}

\item{P_clean}{ membership probability matrix dichotomized according to the quantile of order 1/K}

\item{S}{ shift warping matrix}

\item{S_clean}{ shift warping matrix after cleaning motifs}

\item{D}{ dissimilarity matrix}

\item{D_clean}{ dissimilarity matrix after cleaning motifs}

\item{iter}{ iterations number}

\item{j_iter}{ minimum objective function}

\item{BC_dist}{ Bhattacharyya distance}

\item{BC_dist_iter}{ Bhattacharyya distance from the last iteration}

\item{V0}{ list of the candidates motifs}

\item{V0_clean}{ list of the candidates motifs after cleaning}

\item{V1}{ list of derived from candidates motifs}

\item{V1_clean}{ list of derived from candidates motifs after cleaning}
}
\description{
R wrap for function probKMA used to parallelize find_candidate_motifs
}
\author{
Riccardo Lazzarini Niccolo' Feresini
}
